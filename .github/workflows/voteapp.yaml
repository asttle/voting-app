name: CI for VoteApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        # Add your command to run tests here
        pytest

    - name: Build Docker image
      run: docker build -t voteapp:${{ github.sha }} .\
    
    - name: Install Trivy
      run: |
        sudo apt-get install -y wget
        wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_Linux-64bit.deb
        sudo dpkg -i trivy_Linux-64bit.deb

    - name: Scan Docker image with Trivy
      run: trivy image voteapp:${{ github.sha }} -f json -o trivy-report.json
  
    - name: Upload Trivy Report
      uses: actions/upload-artifact@v2
      with:
        name: trivy-report
        path: trivy-report.json

    - name: Log in to DockerHub
      if: success()
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker image to DockerHub
      if: success()
      run: docker push voteapp:${{ github.sha }}

    - name: OWASP Dependency Check
      uses: jeremylong/DependencyCheck_Action@v2
      with:
        project: "VoteApp"
        format: "HTML"
        failBuildOnCVSS: 5

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      with:
        projectBaseDir: .
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: SAST Scan
      uses: ShiftLeftSecurity/scan-action@master
      with:
        tools: "sast"
        failBuild: true

    - name: DAST Scan
      uses: zaproxy/action-baseline@v0.4.0
      with:
        target: 'http://your_live_app_url_here'
        rulesFile: '.zap/rules.tsv'
        cmdOptions: '-J report.json'